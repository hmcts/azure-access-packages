name: access-packages
trigger:
  batch: true
  branches:
    include:
      - master

resources:
  repositories:
    - repository: cnp-azuredevops-libraries
      type: github
      ref: refs/heads/master
      name: hmcts/cnp-azuredevops-libraries
      endpoint: 'hmcts'

pool:
  vmImage: 'ubuntu-latest'

parameters:
  - name: action
    displayName: Action
    type: string
    default: plan
    values:
      - plan
      - apply

  - name: location
    displayName: Location
    type: string
    default: "UK South"
    values:
      - "UK South"

  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy

  - name: environment_components
    type: object
    default:
      - environment: "prod"
        terraformSubscriptionID: "8999dec3-0104-4a27-94ee-6588559729d1"
        storageAccountEnv: "prod"

variables:
  - name: timeoutInMinutes
    value: 60
  - name: project
    value: "access-packages"
  - name: product
    value: "sds-platform"
  - name: terraformInitSubscription
    value: "04d27a32-7a07-48b3-95b8-3c8691e1a263"
  - name: action
    value: ${{ parameters.action }}

stages:
  - stage: Precheck
    jobs:
      - job:
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: 'DCD-CFT-Sandbox'
              overrideAction: ${{ parameters.overrideAction }}

      - job: PlanAndApply
        steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              location: ${{ parameters.location }}
              serviceConnection: "DTS-SHAREDSERVICES-PROD"
              product: ${{ variables.product }}
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ variables.environment_components[0].environment }}
              component: "access-packages"
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              tfVarsFile: NULL
              initCommandOptions: >
                -reconfigure
                -var subscription_id=${{ variables.terraformInitSubscription }}
              planCommandOptions: >
                -var subscription_id=${{ variables.terraformInitSubscription }}
                -var env=${{ variables.environment_components[0].environment }}
                -var client_id=$(client_id)
                -var client_secret=$(client_secret)
                -var tenant_id=$(tenant_id)
                -compact-warnings
                -lock-timeout=30s
